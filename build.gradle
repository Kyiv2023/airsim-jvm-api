buildscript {
    ext.kotlin_version = '1.3.20'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'fr.utbm.airsim'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'maven-publish'

//plugins {
//    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
//}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.20'

    // Overriding the msgpack-rpc version of msgpack
    compile (group: 'org.msgpack', name: 'msgpack', version: '0.6.12')
    compile (group: 'org.msgpack', name: 'msgpack-core', version: '0.8.16')
    compile (group: 'com.github.stampery', name: 'msgpack-rpc', version: '0.7.1') {
        exclude group: 'org.msgpack', module: 'msgpack'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.10.2"
}

jar {
    // Otherwise you'll get a "No main manifest attribute" error
    manifest {
        attributes["Main-Class"] = "com.example.MainKt"
    }
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}